!function(t){var n={};function e(o){if(n[o])return n[o].exports;var i=n[o]={i:o,l:!1,exports:{}};return t[o].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=t,e.c=n,e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:o})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var i in t)e.d(o,i,function(n){return t[n]}.bind(null,i));return o},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=1)}([function(t,n,e){},function(t,n,e){"use strict";e.r(n);e(0);!function(){class t extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.shadow.innerHTML='\n             <div class="row-item">\n                <input class="input-row-item author-input-row-item" type="text">\n                <div class="input-text-row-item author-input-text-row-item"></div> \n            </div>\n                <div class="row-item">\n                    <input class="input-row-item title-input-row-item" type="text">\n                    <div class="input-text-row-item title-input-text-row-item"></div> \n                </div>\n                <div class="row-item actions-button-container">\n                    <button class="save-button">Save</button>\n                    <button class="edit-button">Edit</button>\n                    <button class="remove-button">Remove</button>\n                </div>\n            <style>      \n                :host {\n                    box-sizing: border-box;\n                    display: flex;\n                    width: 100%;\n                }\n                \n                .save-button {\n                    display: inline;\n                }\n                \n                .edit-button {\n                    display: none;\n                }\n                \n                :host([saved]) .save-button {\n                    display: none;\n                }\n                \n                :host([saved]) .edit-button {\n                    display: inline;\n                }\n                \n                .row-item {\n                    flex: 1 1 0;\n                    height: 3rem;\n                    line-height: 3rem;\n                }\n                \n                .row-item .input-row-item  {\n                    display: inline;\n                    margin-left: 5px;\n                    width: 90%;\n                }\n                \n                :host([saved]) .row-item .input-row-item {\n                    display: none;\n                }  \n                \n                .row-item .input-text-row-item  {\n                    display: none;\n                }\n                               \n                :host([saved]) .row-item .input-text-row-item {\n                    display: inline;\n                    padding-left: 5px;\n                }                \n                \n                .row-item.actions-button-container {\n                    padding-left: 5px;\n                }\n                \n                .row-item:not(:last-of-type) {\n                    border-right: 2px solid white;\n                }\n            </style>\n            '}connectedCallback(){this.author="",this.title="";const t=this.shadowRoot.querySelector(".save-button"),n=this.shadowRoot.querySelector(".edit-button"),e=this.shadowRoot.querySelector(".remove-button");t.addEventListener("click",()=>this._onSaveClicked()),n.addEventListener("click",this._onEditClicked.bind(this)),e.addEventListener("click",()=>this._onRemoveClicked())}_onSaveClicked(){this.author=this.shadowRoot.querySelector(".author-input-row-item").value,this.title=this.shadowRoot.querySelector(".title-input-row-item").value,this.shadowRoot.querySelector(".author-input-text-row-item").innerHTML=`${this.author}`,this.shadowRoot.querySelector(".title-input-text-row-item").innerHTML=`${this.title}`,this.setAttribute("saved","")}_onEditClicked(){this.removeAttribute("saved")}_onRemoveClicked(){const t=new Event("remove-book",{bubbles:!0,composed:!0});this.dispatchEvent(t)}}customElements.define("list-row-component",t)}(),function(){class t extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.shadow.innerHTML='\n             <div class="title">Welcome to my book collection</div>\n            <button class="add-book-button">Add new book</button>\n            <div class="header">\n                <div class="header-item">Author</div>\n                <div class="header-item">Title</div>\n                <div class="header-item"></div>\n            </div>\n            <style>      \n                :host {\n                    box-sizing: border-box;\n                    width: 800px;\n                    /*border: 1px solid black;*/\n                    box-shadow: 0 0 2rem 0 #888888;\n                    display: flex;\n                    flex-flow: column;\n                    align-items: flex-start;\n                    padding: 2rem 1rem;\n                }\n                \n                .title {\n                font-weight: bold;\n                font-size: 3rem;\n                padding-bottom: 3rem;\n                }\n                \n                .header {\n                    display: flex;\n                    flex-grow: 1;\n                    width: 100%;\n                }\n                \n                .header .header-item {\n                    flex: 1 1 0;\n                    font-weight: bold;\n                    text-align: center;\n                    height: 3rem;\n                    line-height: 3rem;\n                    /*if line height is same size as height and the text is one-liner the text content get centered*/\n                }\n                \n                list-row-component {\n                    flex-grow: 1;\n                }\n                \n                list-row-component:nth-child(2n-1) {\n                 background-color: lightgrey;\n                }\n            </style>\n            '}connectedCallback(){this.shadowRoot.querySelector(".add-book-button").addEventListener("click",()=>{const t=document.createElement("list-row-component");this.shadow.appendChild(t),t.addEventListener("remove-book",()=>{this.shadowRoot.removeChild(t)})})}}customElements.define("list-component",t)}(),function(){class t extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).innerHTML="\n            <list-component></list-component>\n            <style>\n                :host {\n                    box-sizing: border-box;\n                    height: 100vh;\n                    max-width: 100vw;\n                    display: flex;\n                    flex-flow: column;\n                    align-items: center;\n                }\n                \n                list-component {\n                    margin-top: 10rem;\n                }\n            </style>\n            "}}customElements.define("root-component",t)}()}]);